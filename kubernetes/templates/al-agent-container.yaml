apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{ include "alertlogic.name" . }}-container
  name: {{ include "alertlogic.name" . }}-container
spec:
  selector:
    matchLabels:
      app: {{ include "alertlogic.name" . }}-container
  template:
    metadata:
      labels:
        app: {{ include "alertlogic.name" . }}-container
    spec:
      hostNetwork: true
      containers:
        - name: {{ include "alertlogic.name" . }}-container
          # See https://hub.docker.com/r/alertlogic/al-agent-container/tags for available images
          image: {{ .Values.alertlogic.image }}:{{ .Values.alertlogic.tag }}
          resources:
            requests:
              memory: "100Mi"
              cpu: "0.25"
            limits:
              memory: "500Mi"
              cpu: "3"
          env:
            - name: KEY
              value: "{{ .Values.alertlogic.registration_key }}"
          securityContext:
            privileged: true
          volumeMounts:
            {{ if eq .Values.alertlogic.type "containerd" }}
            - mountPath: /run/containerd/containerd.sock
              name: container-sock-volume
            {{ else if eq .Values.alertlogic.type "docker" }}
            - mountPath: /var/run/docker.sock
              name: container-sock-volume
            {{ else if eq .Values.alertlogic.type "crio" }}
            - mountPath: /run/crio/crio.sock
              name: container-sock-volume
            {{ end }}
            - mountPath: /host/proc
              name: docker-proc-volume
          imagePullPolicy: Always
      volumes:
        - name: container-sock-volume
          hostPath:
          {{ if eq .Values.alertlogic.type "containerd" }}
            path: /run/containerd/containerd.sock
            type: Socket
          {{ else if eq .Values.alertlogic.type "docker" }}
            path: /var/run/docker.sock
            type: Socket
          {{ else if eq .Values.alertlogic.type "crio" }}
            path: /run/crio/crio.sock
            type: Socket
          {{ end }}
        - name: docker-proc-volume
          hostPath:
            path: /proc
            type: Directory
      restartPolicy: Always
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      # If you want the agent to be deployed on all agents with any posible taints,
      # use this one instead:
      # - operator: "Exists"
